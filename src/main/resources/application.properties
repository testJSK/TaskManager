
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
 ## none, validate, update, create, and create-drop
spring.datasource.url=jdbc:postgresql://localhost:5432/tmdb_008
spring.datasource.username=postgres
spring.datasource.password=kir
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql: true

#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# PERSON
# GET /api/v1/users										- all
# GET /api/v1/groups									- all (user proups)
# GET /api/v1/roles										- all (user roles)

# GET /api/v1/projects								- all
# GET /api/v1/projects/rr2010/issues?tracker_id=14 

# GET /api/v1/issues									- all
# GET /api/v1/issue_statuses					- all (name / close status)


# GET /api/v1/tasks										- all
# GET /api/v1/tasks?parentId=""				- all with parentId == null
# GET /api/v1/tasks?parentId="123"		- all with parentId == 123


# Коды ответов
# • 200 — OK
# • 304 — Страница не изменилась
# • 400 — Ошибка в параметрах запроса
# • 401 — Не авторизован, в запросе отсутствует apikey/token
# • 403 — Нет доступа к запрашиваемой информации
# • 404 — Запрашиваемая информация не найдена

# • 413 — Размер запроса превышает лимит
# • 429 — Превышен лимит запросов к API, в HTTP заголовке Retry-After передается время
# до начала предоставления доступа в секундах
# • 500 — Внутренняя ошибка сервера
# • 501 — Метод не существует
# • 503 — Сервис недоступен, техническое обслуживание, повторите запрос позже


# /2.3/questions/1/answers/add
# {
# 	"error_id": 400,
# 	"error_message": "`key` doesn't match a known application",
# 	"error_name": "bad_parameter"
# }

# /2.3/posts/1?page=1&pagesize=12&order=asc&sort=activity&site=stackoverflow
# {
# 	"items": [],
# 	"has_more": false,
# 	"quota_max": 10000,
# 	"quota_remaining": 9958
# }




# {
# 	"items": [
# 		{
# 			"error_id": 400,
# 			"description": "An malformed parameter was passed",
# 			"error_name": "bad_parameter"
# 		},
# 		{
# 			"error_id": 401,
# 			"description": "No access_token was passed",
# 			"error_name": "access_token_required"
# 		},
# 		{
# 			"error_id": 402,
# 			"description": "An access_token that is malformed, expired, or otherwise incorrect was passed",
# 			"error_name": "invalid_access_token"
# 		},
# 		{
# 			"error_id": 403,
# 			"description": "The access_token passed does not have sufficient permissions",
# 			"error_name": "access_denied"
# 		},
# 		{
# 			"error_id": 404,
# 			"description": "No matching method was found",
# 			"error_name": "no_method"
# 		},
# 		{
# 			"error_id": 405,
# 			"description": "No key was passed",
# 			"error_name": "key_required"
# 		},
# 		{
# 			"error_id": 406,
# 			"description": "Access token may have been leaked, it will be invalidated",
# 			"error_name": "access_token_compromised"
# 		},
# 		{
# 			"error_id": 407,
# 			"description": "A write operation was rejected",
# 			"error_name": "write_failed"
# 		},
# 		{
# 			"error_id": 409,
# 			"description": "A request identified by the given request_id has already been run",
# 			"error_name": "duplicate_request"
# 		},
# 		{
# 			"error_id": 500,
# 			"description": "An error was encountered while servicing this request, it has been recorded",
# 			"error_name": "internal_error"
# 		},
# 		{
# 			"error_id": 502,
# 			"description": "Some violation of the throttling or request quota contract was encountered",
# 			"error_name": "throttle_violation"
# 		},
# 		{
# 			"error_id": 503,
# 			"description": "The method, or the entire API, is temporarily unavailable",
# 			"error_name": "temporarily_unavailable"
# 		}
# 	],
# }


